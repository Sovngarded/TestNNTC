// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestNNTC.DAL;

namespace TestNNTC.DAL.Migrations.Migrations
{
    [DbContext(typeof(TestNNTCDbContext))]
    partial class TestNNTCDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("TestNNTC.DAL.Entities.CatalogueDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CatalogueList");
                });

            modelBuilder.Entity("TestNNTC.DAL.Entities.CatalogueDataProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CatalogueDataEntityId")
                        .HasColumnType("uuid");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueDataEntityId");

                    b.ToTable("CatalogueDataProduct");
                });

            modelBuilder.Entity("TestNNTC.DAL.Entities.CatalogueDataProduct", b =>
                {
                    b.HasOne("TestNNTC.DAL.Entities.CatalogueDataEntity", null)
                        .WithMany("CatalogueProducts")
                        .HasForeignKey("CatalogueDataEntityId");
                });

            modelBuilder.Entity("TestNNTC.DAL.Entities.CatalogueDataEntity", b =>
                {
                    b.Navigation("CatalogueProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
